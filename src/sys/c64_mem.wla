; ZSheet (c) copyright Kroc Camen 2022. unless otherwise noted,
; licenced under a MIT licence; you may reuse and modify this code
; how you please as long as you retain the copyright notice
;
; c64_mem.wla : memory layout for C64
;===============================================================================
; the assembler, WLA-DX, requires a "memory map" to determine where to begin
; assembling. each SLOT in the memory map describes a boundried region of
; memory, however SLOTs are only relevant to how code will be addressed at
; run-time; the binary that is produced packs all bytes together
;
; this is the Commodore 64-specific memory map:
;
.MEMORYMAP
        ;-----------------------------------------------------------------------
        DEFAULTSLOT     2
        SLOTSIZE        $0100
        SLOT 0          $0000   "ZP"
        SLOT 1          $0100   "STACK"
        
        SLOTSIZE        $00cc
        SLOT 2          $0334   "LORAM"
        ; main program RAM
        ; ("ROM" in WLA-DX parlance)
        ;
        SLOTSIZE        $C000-$0800
        SLOT 3          $0800   "DATA"

        SLOTSIZE        $1000
        SLOT 4          $C000   "CODE"
        SLOT 5          $D000   "IO"
        SLOTSIZE        $2000
        SLOT 6          $E000   "KERNAL"
.ENDME

; the Commodore 64 has only one "bank" of RAM,
; all of it fits within the 64K address-space
.ROMBANKSIZE            $FDFA
.ROMBANKS               1

; ZSheet C64 memory map:
;===============================================================================
;
;  $0   $1000                                        $C000     $E000  $FFFF
;  +--+-+--------------------------------------------+----+----+--------+
;  |  | | SHEET DATA                                 | C1 | C2 | C3     |
;  +--+-+--------------------------------------------+----+----+--------+
;     $0800 < font                                        $D000
;
; $0400 screen
; $0800 custom font
; $1000 start of sheet data
; $C000 C1: code
; $D000 C2: code, cannot use I/O
; $E000 C3: code, cannot use KERNAL
;
.DEF    zs_screen       $0400   ; screen-RAM
.DEF    zs_font         $0800   ; custom font
.DEF    zs_data         $1000   ; user-space starting address
.DEF    zs_code         $c000   ; main code

; the size of the free memory region for sheet data
.DEF    ZS_DATA_SIZE    zs_code - zs_data

;-------------------------------------------------------------------------------
.DEF    basic_start     $0801   ; BASIC programs starting address
.DEF    input_buffer    $0200   ; BASIC/KERNAL input buffer
.DEF    input_index     $0258   ; string-index for the input-buffer
.DEF    INPUT_LENGTH    80      ; capacity of input buffer
                                ; (technically, 88 bytes are available, due to
                                ;  the size of the input-buffer on the VIC-20)